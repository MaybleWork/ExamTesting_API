# Generated by Django 4.2.2 on 2023-06-24 07:24

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text",
                    models.CharField(
                        blank=True,
                        max_length=265,
                        null=True,
                        unique=True,
                        verbose_name="Text",
                    ),
                ),
                (
                    "is_test",
                    models.BooleanField(
                        blank=True, default=False, null=True, verbose_name="Test answer"
                    ),
                ),
                (
                    "is_multitest",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="Multitest answer",
                    ),
                ),
                (
                    "is_text",
                    models.BooleanField(
                        blank=True, default=False, null=True, verbose_name="Text answer"
                    ),
                ),
                (
                    "is_correct",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="Correct answer",
                    ),
                ),
                (
                    "mark",
                    models.PositiveSmallIntegerField(
                        blank=True, default=0, null=True, verbose_name="Mark"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "text",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        unique=True,
                        verbose_name="Text",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Result",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=256, unique=True, verbose_name="Result name"
                    ),
                ),
                (
                    "final_mark",
                    models.PositiveSmallIntegerField(
                        default=0, verbose_name="Final mark"
                    ),
                ),
                (
                    "number_of_attemps",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Number of attemps"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Test",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=100, unique=True, verbose_name="Title"),
                ),
                (
                    "max_mark",
                    models.PositiveSmallIntegerField(verbose_name="Maximum mark"),
                ),
                (
                    "number_of_attemps",
                    models.PositiveSmallIntegerField(
                        default=0, max_length=10, verbose_name="Number of attemps"
                    ),
                ),
                (
                    "visibility",
                    models.BooleanField(default=True, verbose_name="Visibility"),
                ),
                (
                    "automate_checking",
                    models.BooleanField(
                        default=False, verbose_name="Automate checking"
                    ),
                ),
                (
                    "question_randomizer",
                    models.BooleanField(
                        default=True, verbose_name="Question randomizer"
                    ),
                ),
                (
                    "backstep",
                    models.BooleanField(default=False, verbose_name="Backstep"),
                ),
                (
                    "penalty",
                    models.PositiveSmallIntegerField(
                        default=0,
                        max_length=100,
                        verbose_name="Penalty for rearrangements",
                    ),
                ),
                (
                    "level",
                    models.PositiveSmallIntegerField(
                        default=0, max_length=100, verbose_name="Completion level"
                    ),
                ),
                ("test_duration", models.DurationField(verbose_name="Test duration")),
                ("start_date", models.DateTimeField(verbose_name="Start date")),
                ("end_date", models.DateTimeField(verbose_name="End date")),
                (
                    "count_of_question",
                    models.PositiveSmallIntegerField(verbose_name="Count of question"),
                ),
            ],
        ),
    ]
